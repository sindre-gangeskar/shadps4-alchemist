.modal-backdrop {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    position: fixed;
    width: 100vw;
    height: 100vh;
    z-index: -1;
}

.modal-wrapper {
    position: fixed;
    display: flex;
    flex-direction: column;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    color: white;
    width: 80dvw;
    height: 80dvh;
    max-width: 1200px;
    max-height: 800px;
    min-width: 400px;
    min-height: 300px;
    z-index: 1;
    transition: opacity 500ms cubic-bezier(0.19, 1, 0.22, 1);
    border-radius: 0.5rem;
}

.modal-header-wrapper {
    width: 100%;
    background-color: black;
    padding: 15px;
    border-radius: 0.5rem 0.5rem 0 0;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.modal-title {
    position: relative;
    height: 100%;
    text-align: center;
}

.modal-body-wrapper {
    display: flex;
    flex-direction: row;
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    background-color: var(--primary-color);
    color: rgb(255, 255, 255);
    font-weight: bolder;
    align-items: center;
    justify-content: space-around;
}

.modal-footer-wrapper {
    flex: 0;
    display: flex;
    justify-content: center;
    position: relative;
    height: 100%;
    width: 100%;
    align-content: center;
    padding: 20px;
    background-color: rgba(0, 0, 0, 0.75);
    border-radius: 0 0 0.5rem 0.5rem;
}

.modal-close {
    background-color: black;
    width: 150px !important;
}

.modal-close:hover {
    background-color: white;
    color: black;
}

.app-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.reveal-btn {
    align-items: center;
    background-color: black;
    width: fit-content;
    padding: 0;
    margin: 0;
    width: 30px;
    height: 30px;
}

.reveal-btn:hover {
    background-color: white;
    color: black;
}

.play-btn {
    font-size: 0.75rem;
    background: linear-gradient(to right, var(--secondary-color), var(--tertiary-primary));
    height: fit-content;
    max-width: 80%;
    width: 100%;
    overflow: hidden;
    text-wrap: nowrap;
    text-overflow: ellipsis;
    outline: 1px solid rgba(255, 255, 255, 0);
    padding: 15px;
    margin: 10px auto;
}

.play-btn:hover {
    outline: 1px solid white;
}

.mods-list {
    height: 100%;
    width: 100%;
    list-style: none;
    margin: 0px auto;
    display: flex;
    flex-direction: column;
    justify-content: top;
    align-items: center;
    font-size: 1rem;
    overflow-y: auto;
}

.mods-list::-webkit-scrollbar-track {
    background-color: transparent;
    border-radius: 1.5rem;
}

.mods-list::-webkit-scrollbar {
    width: 8px;
    overflow: visible;
}

.mods-list::-webkit-scrollbar-thumb {
    background-color: var(--tertiary-primary);
    border-radius: 1.5rem;
}

.mod-item {
    padding: 15px;
    text-overflow: ellipsis;
    text-wrap: nowrap;
    overflow: hidden;
    font-weight: normal;
}

.mod-item-group {
    width: 90%;
    align-items: center;
    display: flex;
    justify-content: space-between;
}

.mod-divider {
    width: 80%;
    background: linear-gradient(to right, #00000000, var(--secondary-color), #00000000 95%);
    height: 1px;
    margin: 15px;
}

.app-details-wrapper {
    position: relative;
    width: 400px;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: none;
}

.game-details-wrapper {
    display: flex;
    flex-direction: column;
    gap: 10px;
    font-family: monospace;
    letter-spacing: 0cap;
    justify-content: center;
    flex: 1;
    font-family: 'JetBrains Mono';
    letter-spacing: 2px;
    max-width: 300px;
    width: 100%;
    min-width: 100px;
}

.game-detail {
    display: flex;
    justify-content: space-between;
    font-weight: normal;
    font-size: 0.7rem;
    text-wrap: nowrap;
}

.game-detail>.game-title {
    margin: 15px auto;
    font-weight: bolder;
}

.game-detail p:nth-child(2) {
    font-weight: bolder;
}

.app-poster {
    max-width: 250px;
    width: 100%;
    margin-top: 50px;
    box-shadow: 0px 5px 30px var(--shadow);
    min-width: 80px;
}

.app-mods-wrapper {
    position: relative;
    justify-content: top;
    align-items: top;
    display: flex;
    flex-direction: column;
    height: 100%;
    width: 400px;
}

.mods-text-wrapper {
    display: flex;
    position: relative;
    text-align: center;
    align-items: center;
    justify-content: center;
    gap: 15px;
    height: 100%;
}

.mods-text {
    font-size: 1rem;
    font-weight: normal;
}

.mods-title {
    text-align: center;
    margin: 10px auto;
}

.app-settings-wrapper {
    display: flex;
    flex-direction: column;
    width: 400px;
    justify-content: top;
    height: 100%;
    margin: 10px;
    align-items: center;
    align-content: center;
    font-size: 1rem;
}

.setting-item {
    padding: 5px;
    display: flex;
    flex-direction: row;
    font-weight: lighter;
    justify-content: space-between;
    width: 100%;
    align-items: center;
}

.settings-title {
    text-align: center;
    margin: 15px auto;
}

.setting-input {
    width: 100px;
    max-width: 125px;
    flex: 1;
    padding: 15px;
    background-color: var(--shadow);
    outline: none;
    border: none;
    margin: 0px 15px;
    font-size: 1rem;
    color: var(--secondary-color);
    text-align: end;
}

.setting-input::placeholder {
    font-size: 0.9rem;
}

.setting-input.number {
    width: fit-content !important;
}

.setting-input[type="number"]::-webkit-outer-spin-button,
.setting-input[type="number"]::-webkit-inner-spin-button {
    margin: 0px;
    -webkit-appearance: none;
}


.divider.horizontal {
    width: 100%;
    height: 1px;
    background: linear-gradient(to right, #00000000, var(--secondary-color), #00000000 95%);
}

.divider.vertical {
    width: 1px;
    height: 100%;
    background: linear-gradient(to top, #00000000, var(--secondary-color), #00000000 95%);
}

.category {
    margin: 15px auto;
    padding: 10px;
    width: 100%;
    font-weight: lighter;
}

@keyframes scaleOut {
    from {
        position: fixed;
        transform: scaleY(0);
    }

    to {
        transform: scaleY(1);
    }
}